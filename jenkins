pipeline {
    agent none

    environment {
        NODE_VERSION = '18'
    }

    stages {
        stage('Checkout') {
            agent { label 'win-agent1' }
            steps {
                echo "Checking out code on win-agent-1..."
                checkout scm
            }
        }

        stage('Install Dependencies') {
            steps {
                script {
                    try {
                        node('win-agent-2') {
                            echo "Installing dependencies on win-agent-2..."
                            bat 'node -v'
                            bat 'npm -v'
                            bat 'npm install'
                        }
                    } catch (err) {
                        echo "win-agent-2 is offline, switching to win-agent-3..."
                        node('win-agent-3') {
                            echo "Installing dependencies on win-agent-3..."
                            bat 'node -v'
                            bat 'npm -v'
                            bat 'npm install'
                        }
                    }
                }
            }
        }

        stage('Build') {
            steps {
                script {
                    try {
                        node('win-agent-2') {
                            echo "Building React project on win-agent-2..."
                            bat 'npm run build'
                        }
                    } catch (err) {
                        echo "win-agent-2 is offline, switching to win-agent-3..."
                        node('win-agent-3') {
                            echo "Building React project on win-agent-3..."
                            bat 'npm run build'
                        }
                    }
                }
            }
        }

        stage('Archive Build') {
            agent { label 'win-agent1' }
            steps {
                echo "Archiving build artifacts on win-agent-1..."
                archiveArtifacts artifacts: 'build\\**', fingerprint: true
            }
        }

        stage('Deploy') {
            steps {
                script {
                    try {
                        node('win-agent-2') {
                            echo "Deploying build from win-agent-2..."
                        }
                    } catch (err) {
                        echo "win-agent-2 is offline, deploying from win-agent-3..."
                        node('win-agent-3') {
                            echo "Deploying build from win-agent-3..."
                        }
                    }
                }
            }
        }
    }

    post {
    always {
        echo "Cleaning workspace on both agents..."
        node('win-agent1') { cleanWs() }
        script {
            try { node('win-agent-2') { cleanWs() } } catch (err) { echo "win-agent-2 offline" }
            try { node('win-agent-3') { cleanWs() } } catch (err) { echo "win-agent-3 offline" }
        }
    }
    success {
        echo "Pipeline completed successfully!"
    }
    failure {
        echo "Pipeline failed!"
    }
}

}
